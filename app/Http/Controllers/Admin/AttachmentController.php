<?php

namespace App\Http\Controllers\Admin;

use App\Http\Requests\Admin\CreateUpdateFileRequest;
use App\Models\Album;
use App\Models\File;
use Illuminate\Http\Request;

class AttachmentController extends BaseController
{

    protected $modelClass = File::class;
    protected $title = 'المرفقات';
    protected $route = 'attachments';
    protected $with = ['album'];

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */

    function index()
    {
        $query = $this->model->whereHas('album',function ($q){
            $q->type('ready_attachment');
        });
        return $this->all($query);
    }

    function getCreateEditData($item = null)
    {
        $albums = Album::type('ready_attachment')->get();
        return compact('albums');
    }

    function show(File $file)
    {
        return redirect()->back()->with('msg', 'لا يوجد تفاصيل');
    }


    /**
     * Store a newly created resource in storage.
     *
     * @param Request $request
     * @return \Illuminate\Http\Response
     */
    public function store(CreateUpdateFileRequest $request)
    {
        //

        return $this->saveData($request->validated());
    }


    /**
     * Update the specified resource in storage.
     *
     * @param Request $request
     * @param File $file
     * @return \Illuminate\Http\Response
     */
    public function update(CreateUpdateFileRequest $request, File $attachment)
    {
        //;
        return $this->saveData($request->validated(), $attachment);
    }

//    function getModel()
//    {
//        $this->model = File::query()->with('album');
//        return $this->model;
//    }

    public function saveData($data, $item = null)
    {
        unset($data['file']);

        if (\request()->file) {
            $name = \request()->file->store("original");
            $fileName = prepare_file_after_upload($name);
            if ($fileName) {
                $data['url'] = $fileName;
                $data['original_name'] = \request()->file->getClientOriginalName();
                $data['extension'] = \request()->file->getClientOriginalExtension();
                $data['size'] = \request()->file->getSize();
            }
        }

        return parent::saveData($data, $item); // TODO: Change the autogenerated stub
    }

}
